install.packages("pwr")
library(pwr)
pwr.t.test(d=0.5, sig.level = 0.05, power = 0.8)
pwr.t.test(d=0.2, sig.level = 0.05, power = 0.8)
pwr.t.test(d=0.8, sig.level = 0.05, power = 0.8)
setwd("/Users/nafisneehal/ESCA")
source("./Scripts/common.R")
source("./Modules/p_val_add.R")
source("./Modules/equity_metrics_miao.R")
confidence_interval <- function(vector, interval) {
# Standard deviation of sample
vec_sd <- sd(vector)
# Sample size
n <- length(vector)
# Mean of sample
vec_mean <- mean(vector)
# Error according to t distribution
error <- qt((interval + 1)/2, df = n - 1) * vec_sd / sqrt(n)
# Confidence interval as a vector
result <- c("lower" = vec_mean - error, "upper" = vec_mean + error)
return(result)
}
directory <- "./Data/Results/PATT_m6/CC_EC_Vary_Size/matchCCEC/"
filename <- "LDM_Summary_Seed20_optimized_newvars.csv"
#write.csv(Final_LDM_Summary, paste(directory, filename, sep = ""), row.names = FALSE)
Final_LDM_Summary <- read.csv(paste(directory, filename, sep = ""))
Final_LDM_Summary <- Final_LDM_Summary %>% filter(!CC_Size==0)
Inf_replace <- max(Final_LDM_Summary %>% mutate_all(function(x) ifelse(is.infinite(x), -1, x)) %>%
select(LDM_CC:LDM_HC_Prop_IPF)) + 0.5
LDM_Summary_Inf <- Final_LDM_Summary
LDM_Summary_Inf[sapply(LDM_Summary_Inf, is.infinite)] <- Inf_replace
mean_summary <- LDM_Summary_Inf %>%
group_by(CC_Size, Level) %>%
summarise(median(LDM_TA),
LDM_TA_Low = confidence_interval(unlist(LDM_TA), 0.95)[1],
LDM_TA_High = confidence_interval(unlist(LDM_TA), 0.95)[2],
median(LDM_CC),
LDM_CC_Low = confidence_interval(unlist(LDM_CC), 0.95)[1],
LDM_CC_High = confidence_interval(unlist(LDM_CC), 0.95)[2],
median(LDM_HC_Prop),
LDM_HC_Prop_Low = confidence_interval(unlist(LDM_HC_Prop), 0.95)[1],
LDM_HC_Prop_High = confidence_interval(unlist(LDM_HC_Prop), 0.95)[2],
median(LDM_HC_IPF),
LDM_HC_IPF_Low = confidence_interval(unlist(LDM_HC_IPF), 0.95)[1],
LDM_HC_IPF_High = confidence_interval(unlist(LDM_HC_IPF), 0.95)[2],
median(LDM_TA_Prop_IPF),
LDM_TA_Prop_IPF_Low = confidence_interval(unlist(LDM_TA_Prop_IPF), 0.95)[1],
LDM_TA_Prop_IPF_High = confidence_interval(unlist(LDM_TA_Prop_IPF), 0.95)[2],
median(LDM_HC_Prop_IPF),
LDM_HC_Prop_IPF_Low = confidence_interval(unlist(LDM_HC_Prop_IPF), 0.95)[1],
LDM_HC_Prop_IPF_High = confidence_interval(unlist(LDM_HC_Prop_IPF), 0.95)[2],
) %>%
rename(LDM_TA = "median(LDM_TA)",
LDM_CC = "median(LDM_CC)",
LDM_HC_Prop = "median(LDM_HC_Prop)",
LDM_HC_IPF = "median(LDM_HC_IPF)",
LDM_TA_Prop_IPF = "median(LDM_TA_Prop_IPF)",
LDM_HC_Prop_IPF = "median(LDM_HC_Prop_IPF)") %>%
mutate(LDM_CC_Low = ifelse(LDM_CC==Inf_replace, LDM_CC, LDM_CC_Low),
LDM_CC_High = ifelse(LDM_CC==Inf_replace, LDM_CC, LDM_CC_High)) %>%
mutate(Plot = ifelse(LDM_CC==Inf_replace, paste(as.character(CC_Size),"*"),
as.character(CC_Size))) %>%
ungroup()
return_plot <- function(var, level){
ymin_val <- min(ungroup(mean_summary) %>% filter(Level==level) %>%
select(LDM_CC:LDM_HC_Prop_IPF_High))
ymax_val <- max(ungroup(mean_summary) %>% filter(Level==level) %>%
select(LDM_CC:LDM_HC_Prop_IPF_High))
cap <- paste(var,":",level)
p <- mean_summary %>% filter(Level==level) %>%
ggplot(aes(x=factor(Plot, levels = mixedsort(Plot)))) +
#geom_line(aes(y=LDM_CC, color="Only CC")) +
geom_errorbar(aes(ymin=LDM_CC_Low, ymax=LDM_CC_High, colour="Only CC")) +
geom_point(aes(y=LDM_CC, colour="Only CC")) +
#geom_line(aes(y=LDM_HC_Prop, color="HC+Propensity")) +
geom_errorbar(aes(ymin=LDM_HC_Prop_Low, ymax=LDM_HC_Prop_High, colour="HC+Propensity")) +
geom_point(aes(y=LDM_HC_Prop, color="HC+Propensity")) +
#geom_line(aes(y=LDM_HC_IPF, color="HC+IPF")) +
geom_errorbar(aes(ymin=LDM_HC_IPF_Low, ymax=LDM_HC_IPF_High, colour="HC+IPF")) +
geom_point(aes(y=LDM_HC_IPF, color="HC+IPF")) +
#geom_line(aes(y=LDM_HC_Prop_IPF, color="HC+Propensity+IPF")) +
geom_errorbar(aes(ymin=LDM_HC_Prop_IPF_Low, ymax=LDM_HC_Prop_IPF_High, color="HC+Propensity+IPF")) +
geom_point(aes(y=LDM_HC_Prop_IPF, color="HC+Propensity+IPF")) +
geom_hline(aes(yintercept= 0.22, color = "Equity Range"), linetype="dashed")+
#ylim(ymin_val,ymax_val)+
theme_classic()+
theme(axis.title =element_text(size=6), axis.text.x = element_text(angle = 90))+
scale_color_manual(name="Population",
values=c("Only CC"="#D55E00", "HC+Propensity"="#336699", "HC+IPF"="#CC66FF",
"HC+Propensity+IPF"="#FFCC00", "Equity Range"="#99CC33"))+
labs(x="CC_Size", y="Median LDM Estimate", caption = cap)
return (p)
}
g1 <- return_plot("Gender", "Female")
g2 <- return_plot("Gender", "Male")
a1 <- return_plot("Age_Group", "40-59")
a2 <- return_plot("Age_Group", "59+")
r1 <- return_plot("Race_or_Ethnicity", "NH Asian")
r2 <- return_plot("Race_or_Ethnicity", "NH Black")
r3 <- return_plot("Race_or_Ethnicity", "NH White")
r4 <- return_plot("Race_or_Ethnicity", "Hispanic")
r5 <- return_plot("Race_or_Ethnicity", "Other")
ggarrange(g1,g2, nrow=1,
common.legend = TRUE, legend = "bottom")
ggarrange(a1,a2, nrow=1,
common.legend = TRUE, legend = "bottom")
ggarrange(r1, r2, r3, r4, r5, nrow=2, ncol=3,
common.legend = TRUE, legend = "bottom")
ggarrange(g1,g2, nrow=1,
common.legend = TRUE, legend = "bottom")
ggarrange(a1,a2, nrow=1,
common.legend = TRUE, legend = "bottom")
ggarrange(r1, r2, r3, r4, r5, nrow=2, ncol=3,
common.legend = TRUE, legend = "bottom")
mean_summary %>% filter(Level=='59+')
mean_summary %>% filter(Level=='59+') %>% select(LDM_CC, Plot)
mean_summary %>% filter(Level=='Other') %>% select(LDM_CC, Plot)
mean_summary %>% filter(Level=='Other') %>% select(LDM_HC_Prop, Plot)
mean_summary %>% filter(Level=='NH White') %>% select(LDM_HC_Prop, Plot)
mean_summary %>% filter(Level=='Female') %>% select(LDM_HC_Prop, Plot)
source("~/ESCA/Scripts/LDI_Summary_Optimized.R")
TA_World
tw_copy <- TA_World
tw_copy$group <- "TA_World"
ccw_copy <- CC_World
ccw_copy$group <- "CC_World"
ecw_copy <- EC_world[sample(seq_len(nrow(EC_world)), size = nrow(EC_world),
replace = TRUE, prob = W_EC_ipf),]
ecw_copy$group <- "EC_World"
population <- do.call("rbind", list(tw_copy, ccw_copy, ecw_copy))
population$Education[population$Education=='<HSG'] <- "Below HSG"
population$CVDHISTORY <- factor(population$CVDHISTORY, levels=c(0,1),
labels=c("No", "Yes"))
table1(~ Age_Group + Gender + Race_or_Ethnicity | group, data=population)
table1(~ CVDPOINTS + Education + FPG + TC + CVDHISTORY +  SERUMCREAT + GFRESTIMATE | group, data=population)
table1(~ CVDPOINTS + GFRESTIMATE + Education + FPG + TC + CVDHISTORY +  SERUMCREAT | group, data=population)
table1(~ Age_Group + Gender + Race_or_Ethnicity + Education | group, data=population)
table1(~ CVDPOINTS + GFRESTIMATE+ FPG + TC + CVDHISTORY +  SERUMCREAT | group, data=population)
setwd("/Users/nafisneehal/ESCA")
source("./Scripts/common.R")
source("./Modules/p_val_add.R")
source("./Modules/equity_metrics_miao.R")
confidence_interval <- function(vector, interval) {
# Standard deviation of sample
vec_sd <- sd(vector)
# Sample size
n <- length(vector)
# Mean of sample
vec_mean <- mean(vector)
# Error according to t distribution
error <- qt((interval + 1)/2, df = n - 1) * vec_sd / sqrt(n)
# Confidence interval as a vector
result <- c("lower" = vec_mean - error, "upper" = vec_mean + error)
return(result)
}
directory <- "./Data/Results/PATT_m6/CC_EC_Vary_Size/matchCCEC/"
filename <- "LDM_Summary_Seed20_optimized_newvars.csv"
Final_LDM_Summary <- read.csv(paste(directory, filename, sep = ""))
Final_LDM_Summary <- Final_LDM_Summary %>% filter(!CC_Size==0)
Inf_replace <- max(Final_LDM_Summary %>% mutate_all(function(x) ifelse(is.infinite(x), -1, x)) %>%
select(LDM_CC:LDM_HC_Prop_IPF)) + 0.5
LDM_Summary_Inf <- Final_LDM_Summary
LDM_Summary_Inf[sapply(LDM_Summary_Inf, is.infinite)] <- Inf_replace
MedianCI(Final_LDM_Summary$LDM_CC)
mean_summary <- LDM_Summary_Inf %>%
group_by(CC_Size, Level) %>%
summarise(median(LDM_TA),
LDM_TA_Low = MedianCI(unlist(LDM_TA), 0.95)[2],
LDM_TA_High = MedianCI(unlist(LDM_TA), 0.95)[3],
median(LDM_CC),
LDM_CC_Low = MedianCI(unlist(LDM_CC), 0.95)[2],
LDM_CC_High = MedianCI(unlist(LDM_CC), 0.95)[3],
median(LDM_HC_Prop),
LDM_HC_Prop_Low = MedianCI(unlist(LDM_HC_Prop), 0.95)[2],
LDM_HC_Prop_High = MedianCI(unlist(LDM_HC_Prop), 0.95)[3],
median(LDM_HC_IPF),
LDM_HC_IPF_Low = MedianCI(unlist(LDM_HC_IPF), 0.95)[2],
LDM_HC_IPF_High = MedianCI(unlist(LDM_HC_IPF), 0.95)[3],
median(LDM_TA_Prop_IPF),
LDM_TA_Prop_IPF_Low = MedianCI(unlist(LDM_TA_Prop_IPF), 0.95)[2],
LDM_TA_Prop_IPF_High = MedianCI(unlist(LDM_TA_Prop_IPF), 0.95)[3],
median(LDM_HC_Prop_IPF),
LDM_HC_Prop_IPF_Low = MedianCI(unlist(LDM_HC_Prop_IPF), 0.95)[2],
LDM_HC_Prop_IPF_High = MedianCI(unlist(LDM_HC_Prop_IPF), 0.95)[3],
) %>%
rename(LDM_TA = "median(LDM_TA)",
LDM_CC = "median(LDM_CC)",
LDM_HC_Prop = "median(LDM_HC_Prop)",
LDM_HC_IPF = "median(LDM_HC_IPF)",
LDM_TA_Prop_IPF = "median(LDM_TA_Prop_IPF)",
LDM_HC_Prop_IPF = "median(LDM_HC_Prop_IPF)") %>%
mutate(LDM_CC_Low = ifelse(LDM_CC==Inf_replace, LDM_CC, LDM_CC_Low),
LDM_CC_High = ifelse(LDM_CC==Inf_replace, LDM_CC, LDM_CC_High)) %>%
mutate(Plot = ifelse(LDM_CC==Inf_replace, paste(as.character(CC_Size),"*"),
as.character(CC_Size))) %>%
ungroup()
return_plot <- function(var, level){
ymin_val <- min(ungroup(mean_summary) %>% filter(Level==level) %>%
select(LDM_CC:LDM_HC_Prop_IPF_High))
ymax_val <- max(ungroup(mean_summary) %>% filter(Level==level) %>%
select(LDM_CC:LDM_HC_Prop_IPF_High))
cap <- paste(var,":",level)
p <- mean_summary %>% filter(Level==level) %>%
ggplot(aes(x=factor(Plot, levels = mixedsort(Plot)))) +
#geom_line(aes(y=LDM_CC, color="Only CC")) +
geom_errorbar(aes(ymin=LDM_CC_Low, ymax=LDM_CC_High, colour="Only CC")) +
geom_point(aes(y=LDM_CC, colour="Only CC")) +
#geom_line(aes(y=LDM_HC_Prop, color="HC+Propensity")) +
geom_errorbar(aes(ymin=LDM_HC_Prop_Low, ymax=LDM_HC_Prop_High, colour="HC+Propensity")) +
geom_point(aes(y=LDM_HC_Prop, color="HC+Propensity")) +
#geom_line(aes(y=LDM_HC_IPF, color="HC+IPF")) +
geom_errorbar(aes(ymin=LDM_HC_IPF_Low, ymax=LDM_HC_IPF_High, colour="HC+IPF")) +
geom_point(aes(y=LDM_HC_IPF, color="HC+IPF")) +
#geom_line(aes(y=LDM_HC_Prop_IPF, color="HC+Propensity+IPF")) +
geom_errorbar(aes(ymin=LDM_HC_Prop_IPF_Low, ymax=LDM_HC_Prop_IPF_High, color="HC+Propensity+IPF")) +
geom_point(aes(y=LDM_HC_Prop_IPF, color="HC+Propensity+IPF")) +
geom_hline(aes(yintercept= 0.22, color = "Equity Range"), linetype="dashed")+
#ylim(ymin_val,ymax_val)+
theme_classic()+
theme(axis.title =element_text(size=6), axis.text.x = element_text(angle = 90))+
scale_color_manual(name="Population",
values=c("Only CC"="#D55E00", "HC+Propensity"="#336699", "HC+IPF"="#CC66FF",
"HC+Propensity+IPF"="#FFCC00", "Equity Range"="#99CC33"))+
labs(x="CC_Size", y="Median LDM Estimate", caption = cap)
return (p)
}
g1 <- return_plot("Gender", "Female")
g2 <- return_plot("Gender", "Male")
a1 <- return_plot("Age_Group", "40-59")
a2 <- return_plot("Age_Group", "59+")
r1 <- return_plot("Race_or_Ethnicity", "NH Asian")
r2 <- return_plot("Race_or_Ethnicity", "NH Black")
r3 <- return_plot("Race_or_Ethnicity", "NH White")
r4 <- return_plot("Race_or_Ethnicity", "Hispanic")
r5 <- return_plot("Race_or_Ethnicity", "Other")
ggarrange(g1,g2, nrow=1,
common.legend = TRUE, legend = "bottom")
ggarrange(a1,a2, nrow=1,
common.legend = TRUE, legend = "bottom")
ggarrange(r1, r2, r3, r4, r5, nrow=2, ncol=3,
common.legend = TRUE, legend = "bottom")
